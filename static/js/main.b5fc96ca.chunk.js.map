{"version":3,"sources":["cmps/ContactPreview/ContactPreview.js","cmps/ContactList/ContactList.js","cmps/ContactFilter/ContactFilter.js","pages/ContactPage/ContactPage.js","pages/HomePage/HomePage.js","service/ChartService.js","pages/Chart/Chart.js","cmps/TransferFund/TransferFund.js","cmps/MovesList/MovesList.js","pages/ContactDetails/ContactDetails.js","pages/ContactEdit/ContactEdit.js","pages/SignupPage/SignupPage.js","cmps/AppHeader/AppHeader.js","service/UserService.js","App.js","serviceWorker.js","service/ContactService.js","store/ContactStore.js","service/BitcoinService.js","store/UserStore.js","index.js","store/RootStore.js"],"names":["ContactPreview","props","contact","react_default","a","createElement","Link","to","concat","_id","className","src","name","alt","ContactList","contacts","map","key","ContactFilter_ContactFilter","onChange","onSetFilter","placeholder","ContactPage","inject","observer","contactStore","_this","store","filter","this","fetchContacts","ev","value","target","term","setFilter","bind","Component","HomePage","userStore","fetchUser","fetchBitcoinRate","_this$userStore","user","bitcoinRate","role","aria-label","coins","ChartService","getMarketPrice","axios","get","then","res","marketPriceValues","data","values","marketPrices","forEach","push","y","getTransactionsPerDay","transactionsList","transactions","transaction","Chart","state","transactionsPerDay","setState","_this$state","build","Object","toConsumableArray","color","TransferFund","contactName","onSubmit","onTransferCoins","type","MovesList_MovesList","moves","move","idx","showTo","dist_default","fromNow","time","amount","ContactDetails","contactId","match","params","fetchContactById","preventDefault","transferAmount","updateUser","email","phone","toId","ContactEdit","handleChange","param","objectSpread","defineProperty","handleSubmit","_callee","regenerator_default","wrap","_context","prev","next","saveContact","history","stop","deleteContact","JSON","parse","stringify","_this$state$contact","header","route","onClick","required","SignupPage","signupUser","sent","replace","AppHeader","NavLink","exact","UserService","getUser","username","_saveUserToStorage","_createUser","newUser","Date","now","_createUserMove","localStorage","getItem","setItem","PrivateRoute","Route","Redirect","App","renderSignupCmp","pages_SignupPage_SignupPage","console","log","BrowserRouter","Switch","App_PrivateRoute","path","component","render","observable","Boolean","window","location","hostname","_addContact","Promise","resolve","reject","length","arguments","undefined","txt","possible","i","charAt","Math","floor","random","_makeId","ContactService","getContacts","contactsToReturn","filterBy","toLowerCase","includes","sort","b","toLocaleLowerCase","getContactById","id","find","index","findIndex","splice","c","_updateContact","getEmptyContact","RobotStore","rootStore","classCallCheck","initializerDefineProperty","ContactStore_descriptor","_descriptor2","action","BitcoinService","getBitcoinRate","num","UserStore","UserStore_descriptor","UserStore_descriptor2","userCoins","computed","RootStore","showNavBar","ContactStore","ReactDOM","index_module","Fragment","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5fc96ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default (props) => {\r\n    const { contact } = props\r\n    return (\r\n        <Link to={`/contact/${contact._id}`}>\r\n            < li className=\"contact\">\r\n                <img src={`https://robohash.org/${contact.name}.png?set=set2`} alt={contact.name} />\r\n                <h3>{contact.name}</h3>\r\n            </li >\r\n        </Link>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport ContactPreview from '../ContactPreview/ContactPreview'\r\n\r\nexport default (props) => {\r\n\r\n    const { contacts } = props\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {\r\n                contacts &&\r\n                contacts.map(contact =>\r\n                    <ContactPreview contact={contact} key={contact._id} />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}","import React from 'react'\r\nimport './ContactFilter.scss'\r\n\r\nexport default (props) => {\r\n    return (\r\n        <input className=\"contact-filter\" onChange={props.onSetFilter} placeholder=\"Search\" />\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport ContactList from '../../cmps/ContactList/ContactList'\r\nimport ContactFilter from '../../cmps/ContactFilter/ContactFilter'\r\n\r\nimport './ContactPage.scss'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactPage extends Component {\r\n\r\n    contactStore = this.props.store.contactStore\r\n    filter = ''\r\n\r\n    async componentDidMount() {\r\n        await this.contactStore.fetchContacts()\r\n    }\r\n\r\n    async setFilter(ev) {\r\n        const { target: { value } } = ev\r\n        this.contactStore.fetchContacts({ term: value })\r\n        this.filter = value\r\n    }\r\n\r\n    render() {\r\n        const { contacts } = this.contactStore\r\n\r\n        return (\r\n            <div className=\"contacts-container\">\r\n                {\r\n                    <div className=\"list-wrapper\" >\r\n                        <ContactFilter onSetFilter={this.setFilter.bind(this)}></ContactFilter>\r\n                        <ContactList contacts={contacts} />\r\n                        <Link to=\"/contact/edit\">\r\n                            <button>+</button>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPage","import React, { Component } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends Component {\r\n\r\n    userStore = this.props.store.userStore\r\n\r\n    async componentDidMount() {\r\n        await this.userStore.fetchUser()\r\n        await this.userStore.fetchBitcoinRate()\r\n    }\r\n\r\n    render() {\r\n        const { user, bitcoinRate } = this.userStore\r\n        return (\r\n            user &&\r\n            <section className=\"home-page-container\">\r\n                <h1>Hi {user.name}!</h1>\r\n                <h2><span role=\"img\" aria-label=\"emoji\">💰</span> Coins: {user.coins}</h2>\r\n                <h2>BTC: {bitcoinRate}<span>₿</span></h2>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","import axios from 'axios'\r\n\r\nexport default {\r\n    getMarketPrice,\r\n    getTransactionsPerDay\r\n}\r\n\r\n\r\nfunction getMarketPrice() {\r\n    return axios.get('https://api.blockchain.info/charts/market-price?format=json&cors=true')\r\n        .then(res => {\r\n            var marketPriceValues = res.data.values\r\n            var marketPrices = []\r\n            marketPriceValues.forEach(value => {\r\n                marketPrices.push(value.y)\r\n            })\r\n            // console.log(marketPrices)\r\n            return marketPrices\r\n        })\r\n}\r\n\r\nfunction getTransactionsPerDay() {\r\n    return axios.get('https://api.blockchain.info/charts/n-transactions?format=json&cors=true')\r\n        .then(res => {\r\n            var transactionsList = res.data.values\r\n            var transactions = []\r\n\r\n            transactionsList.forEach(transaction => {\r\n                transactions.push(transaction.y)\r\n            })\r\n\r\n            return transactions\r\n        })\r\n}","import React, { Component } from 'react'\r\n\r\nimport ChartService from '../../service/ChartService'\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines'\r\n\r\nexport default class Chart extends Component {\r\n    state = {\r\n        marketPrices: [],\r\n        transactionsPerDay: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const marketPrices = await ChartService.getMarketPrice()\r\n        const transactionsPerDay = await ChartService.getTransactionsPerDay()\r\n        this.setState({ marketPrices, transactionsPerDay })\r\n    }\r\n\r\n    render() {\r\n        const { marketPrices, transactionsPerDay } = this.state\r\n        return (\r\n            <section className=\"chart-container\">\r\n                <div className=\"market-prices\">\r\n                    <h1>Market Price (USD)</h1>\r\n                    <Sparklines data={[...marketPrices]}>\r\n                        <SparklinesLine color=\"blue\" />\r\n                    </Sparklines>\r\n                </div>\r\n                <div className=\"confirmed-transactions\" >\r\n                    <h1> Confirmed Transactions Per Day</h1>\r\n                    <Sparklines data={[...transactionsPerDay]}>\r\n                        <SparklinesLine color=\"navy\"/>\r\n                    </Sparklines>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"transfer-fund\">\r\n            <h3>Transfer coins to {props.contactName}:</h3>\r\n            <form onSubmit={props.onTransferCoins}>\r\n                Amount:\r\n                <input type=\"number\" name=\"amount\" />\r\n                <button>Transfer</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Moment from 'react-moment'\r\n\r\nimport './MovesList.scss'\r\n\r\nexport default props => {\r\n    const { moves } = props\r\n    return (\r\n        <div className=\"moves-list\">\r\n            <h3>Your Moves:</h3>\r\n            <hr />\r\n            {\r\n                <ul>\r\n                    {\r\n                        moves.map((move, idx) =>\r\n                            <li key={idx}>\r\n                                {\r\n                                    props.showTo &&\r\n                                    <h5>To: {move.to}</h5>\r\n                                }\r\n                                <h5>\r\n                                    <span role=\"img\" aria-label=\"time\">\r\n                                        ⏱\r\n                                    </span>\r\n                                    &nbsp;\r\n                                    <Moment fromNow>{move.time}</Moment>\r\n                                </h5>\r\n                                <h5>\r\n                                    <span role=\"img\" aria-label=\"coins\">\r\n                                        💰\r\n                                    </span> {move.amount} Coins</h5>\r\n                            </li>\r\n\r\n                        )\r\n                    }\r\n                </ul>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { inject, observer } from 'mobx-react'\r\n\r\nimport TransferFund from '../../cmps/TransferFund/TransferFund'\r\nimport MovesList from '../../cmps/MovesList/MovesList'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactDetails extends Component {\r\n\r\n    contactStore = this.props.store.contactStore\r\n    userStore = this.props.store.userStore\r\n\r\n    async componentDidMount() {\r\n        const { contactId } = this.props.match.params\r\n        await this.contactStore.fetchContactById(contactId)\r\n        await this.userStore.fetchUser()\r\n    }\r\n\r\n    onTransferCoins(ev) {\r\n        ev.preventDefault()\r\n\r\n        const { contact } = this.contactStore\r\n        const { target: { amount } } = ev\r\n        const transferAmount = amount.value\r\n\r\n        this.userStore.updateUser(contact, transferAmount)\r\n        // var user = UserService.updateUser(contact, transferAmount)\r\n        amount.value = ''\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.contactStore\r\n        var { user } = this.userStore\r\n\r\n        return (\r\n            contact &&\r\n            <section className=\"contact-details\" >\r\n                <div className=\"contact-details-header\">\r\n                    <Link to=\"/contact\">\r\n                        <button>Back</button>\r\n                    </Link>\r\n                    <Link to={`/contact/edit/${contact._id}`}>\r\n                        <button>Edit</button>\r\n                    </Link>\r\n                </div>\r\n                <img src={`https://robohash.org/${contact.name}.png?set=set2`} alt={contact.name} />\r\n                <h2>Name: {contact.name}</h2>\r\n                <h2>Email: {contact.email}</h2>\r\n                <h2>Phone: {contact.phone}</h2>\r\n\r\n                <TransferFund contactName={contact.name} onTransferCoins={this.onTransferCoins.bind(this)} />\r\n                {\r\n                    user &&\r\n                    <MovesList moves={user.moves.filter(move => contact._id === move.toId)} />\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactDetails","import React, { Component } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactEdit extends Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n        }\r\n    }\r\n\r\n    contactStore = this.props.store.contactStore\r\n\r\n    componentDidMount() {\r\n        const { contactId } = this.props.match.params\r\n        if (contactId) {\r\n            this.contactStore.fetchContactById(contactId)\r\n            this.setState({ contact: JSON.parse(JSON.stringify(this.contactStore.contact)) })\r\n        }\r\n    }\r\n    handleChange = (ev) => {\r\n        var param = ev.target.name\r\n        this.setState({\r\n            contact:\r\n            {\r\n                ...this.state.contact,\r\n                [param]: ev.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.contactStore.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    deleteContact = () => {\r\n        this.contactStore.deleteContact(this.state.contact._id)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { name, phone, email } = this.state.contact\r\n        const contactId = this.state.contact._id\r\n        const header = contactId ? 'Edit' : 'Add'\r\n        const route = contactId ? `/${contactId}` : ''\r\n\r\n        return (\r\n            <form className=\"contact-edit\" onSubmit={this.handleSubmit}>\r\n                <div className=\"contact-edit-btns\">\r\n                    <Link to={`/contact${route}`}>\r\n                        <button type=\"button\">Back</button>\r\n                    </Link>\r\n                    {\r\n                        contactId &&\r\n                        <button type=\"button\" onClick={this.deleteContact}>Delete</button>\r\n                    }\r\n                </div>\r\n                <h1>{header} Contact</h1>\r\n                <input type=\"text\" value={name} placeholder=\"Contact Name\" name=\"name\" onChange={this.handleChange} required />\r\n                <input type=\"text\" value={phone} placeholder=\"Contact Phone\" name=\"phone\" onChange={this.handleChange} required />\r\n                <input type=\"email\" value={email} placeholder=\"Contact Email\" name=\"email\" onChange={this.handleChange} required />\r\n                <button>Save</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactEdit","import React, { Component } from 'react'\r\n\r\nimport { inject, observer } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass SignupPage extends Component {\r\n    state = { user: { name: '' } }\r\n\r\n    userStore = this.props.store.userStore\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ user: { name: ev.target.value } })\r\n    }\r\n\r\n    handleSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        const user = await this.userStore.signupUser(this.state.user.name)\r\n        this.props.history.replace('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"user-signup\">\r\n                <img src=\"http://pngimg.com/uploads/bitcoin/bitcoin_PNG25.png\" alt=\"bitcoin\" />\r\n                <input type=\"text\" name=\"name\" placeholder=\"Enter New Username\" value={this.state.user.name} onChange={this.handleChange} />\r\n                <button>Sign Up</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupPage","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default props => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <nav>\r\n                <ul>\r\n                    <NavLink exact to=\"/\">\r\n                        <li>Home</li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/contact\">\r\n                        <li>Contacts</li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/chart\">\r\n                        <li>Charts</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}","export default {\r\n    getUser,\r\n    signupUser,\r\n    updateUser\r\n}\r\n\r\nvar user = null\r\n\r\nfunction getUser() {\r\n    user = localStorage.getItem('user')\r\n\r\n    if (user) {\r\n        return JSON.parse(user)\r\n    }\r\n    return\r\n}\r\n\r\nfunction signupUser(username) {\r\n    user = _createUser(username)\r\n    _saveUserToStorage(user)\r\n    return user\r\n}\r\n\r\nfunction updateUser(contact, transferAmount) {\r\n    var newUser = getUser()\r\n    newUser.coins -= transferAmount\r\n    newUser.moves.push(_createUserMove(contact._id, contact.name, transferAmount))\r\n    _saveUserToStorage(newUser)\r\n    return newUser\r\n}\r\n\r\nfunction _createUserMove(toId, to, transferAmount) {\r\n    return {\r\n        toId,\r\n        to,\r\n        time: Date.now(),\r\n        amount: transferAmount\r\n    }\r\n}\r\n\r\nfunction _createUser(username) {\r\n    return {\r\n        name: username,\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n}\r\n\r\nfunction _saveUserToStorage(user) {\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport './assets/scss/index.scss'\nimport { inject, observer } from 'mobx-react'\nimport { observable } from 'mobx';\n\nimport ContactPage from './pages/ContactPage/ContactPage'\nimport HomePage from './pages/HomePage/HomePage'\nimport Chart from './pages/Chart/Chart'\nimport ContactDetails from './pages/ContactDetails/ContactDetails'\nimport ContactEdit from './pages/ContactEdit/ContactEdit'\nimport SignupPage from './pages/SignupPage/SignupPage'\nimport AppHeader from './cmps/AppHeader/AppHeader'\nimport 'moment-timezone';\n\n\nimport UserService from './service/UserService'\n\nconst PrivateRoute = props => {\n  return props.user ? <Route {...props} /> : <Redirect to=\"/signup\" />\n}\n\n@inject('store')\n@observer\nclass App extends Component {\n\n  // state = { user: UserService.getUser() }\n  userStore = this.props.store.userStore\n  \n  @observable\n  user = this.userStore.user\n\n  componentDidMount() {\n  }\n\n\n  renderSignupCmp = (props) => {\n    return <SignupPage {...props} />\n  }\n\n  render() {\n    const { user } = this.userStore\n    console.log(user)\n    return (\n      <Router>\n\n        <div className=\"App\">\n\n          {user &&\n            <AppHeader></AppHeader>\n          }\n\n          <Switch>\n            <PrivateRoute path=\"/\" exact component={HomePage} user={user} />\n            <PrivateRoute path=\"/contact\" exact component={ContactPage} user={user} />\n            <PrivateRoute path=\"/chart\" component={Chart} user={user} />\n            <PrivateRoute path=\"/contact/edit\" exact component={ContactEdit} user={user} />\n            <PrivateRoute path=\"/contact/edit/:contactId\" component={ContactEdit} user={user} />\n            <PrivateRoute path=\"/contact/:contactId\" component={ContactDetails} user={user} />\n            \n            <Route path=\"/signup\" render={this.renderSignupCmp} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  var contactsToReturn;\n  return new Promise((resolve, reject) => {\n    contactsToReturn = contacts;\n    if (filterBy) {\n      const { term } = filterBy;\n      contactsToReturn = contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(term) ||\n          contact.phone.toLowerCase().includes(term) ||\n          contact.email.toLowerCase().includes(term)\n      })\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return new Promise((resolve, reject) => {\n    const c = contacts.filter(contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n        contact.phone.toLocaleLowerCase().includes(term) ||\n        contact.email.toLocaleLowerCase().includes(term)\n    })\n\n    resolve(c)\n  })\n}\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  filter,\n  saveContact,\n  getEmptyContact\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import ContactService from '../service/ContactService';\r\nimport { observable, action } from 'mobx';\r\n\r\nexport default class RobotStore {\r\n    @observable\r\n    contacts = [];\r\n\r\n    @observable\r\n    contact = null\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @action\r\n    async fetchContacts(filter) {\r\n        this.contacts = await ContactService.getContacts(filter);\r\n    }\r\n\r\n    @action\r\n    async fetchContactById(contactId) {\r\n        this.contact = await ContactService.getContactById(contactId)\r\n    }\r\n\r\n    @action\r\n    async saveContact(contact) {\r\n        this.contact = await ContactService.saveContact(contact)\r\n    }\r\n\r\n    @action\r\n    deleteContact(contactId) {\r\n        this.contact = null\r\n        ContactService.deleteContact(contactId)\r\n    }\r\n}","import axios from 'axios'\r\n\r\n//https://blockchain.info/tobtc?currency=USD&value=1\r\n\r\nexport default{\r\n    getBitcoinRate,\r\n}\r\n\r\nfunction getBitcoinRate(num) {\r\n    return axios.get(`https://blockchain.info/tobtc?currency=USD&value=${num}`)\r\n        .then(res=> res.data)\r\n}","import UserService from '../service/UserService';\r\nimport BitcoinService from '../service/BitcoinService';\r\n\r\nimport { observable, action, computed } from 'mobx';\r\n\r\nexport default class UserStore {\r\n    @observable\r\n    user = null;\r\n\r\n    @observable\r\n    bitcoinRate = 0;\r\n\r\n    @computed\r\n    get userCoins() {\r\n        return this.user.coins\r\n    }\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @action\r\n    fetchUser() {\r\n        this.user = UserService.getUser();\r\n    }\r\n\r\n    @action\r\n    async fetchBitcoinRate() {\r\n        this.bitcoinRate = await BitcoinService.getBitcoinRate(this.userCoins)\r\n    }\r\n\r\n    @action\r\n    async updateUser(contact, transferAmount) {\r\n        this.user = await UserService.updateUser(contact, transferAmount)\r\n    }\r\n\r\n    @action\r\n    async signupUser(username) {\r\n        const user = await UserService.signupUser(username)\r\n        this.user = user\r\n        return user\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RootStore from './store/RootStore';\nimport { Provider } from 'mobx-react'\n\nconst rootStore = new RootStore()\n\nrootStore.userStore.fetchUser()\n\nReactDOM.render(\n    <Provider store={rootStore} >\n        <React.Fragment>\n            <App />\n        </React.Fragment>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import ContactStore from './ContactStore';\r\nimport UserStore from './UserStore';\r\n\r\nexport default class RootStore {\r\n  showNavBar = true;\r\n  constructor() {\r\n    this.contactStore = new ContactStore(this);\r\n    this.userStore = new UserStore(this);\r\n  }\r\n}\r\n"],"sourceRoot":""}